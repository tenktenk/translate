/*
Package countryspecs country codes and lat/long coordinates of enclosing square as well as total population (from GRUMP).
*/
package countryspecs

// store country code
type CountryCodeGrump struct {
	Name      string
	Rank      int
	CodeGrump int
}

// general storage table
var CountryCodeGrumps = []CountryCodeGrump{
	{"Afghanistan", 0, 2},
	{"Albania", 1, 0},
	{"Algeria", 2, 0},
	{"American Samoa", 3, 0},
	{"Andorra", 4, 0},
	{"Angola", 5, 0},
	{"Anguilla", 6, 0},
	{"Antigua and Barbuda", 7, 0},
	{"Argentina", 8, 9},
	{"Armenia", 9, 0},
	{"Aruba", 10, 0},
	{"Australia", 11, 13},
	{"Austria", 12, 14},
	{"Azerbaijan", 13, 0},
	{"Bahamas", 14, 0},
	{"Bahrain", 15, 0},
	{"Bangladesh", 16, 0},
	{"Barbados", 17, 0},
	{"Belarus", 18, 0},
	{"Belgium", 19, 0},
	{"Belize", 20, 0},
	{"Benin", 21, 18},
	{"Bermuda", 22, 0},
	{"Bhutan", 23, 0},
	{"Bolivia", 24, 28},
	{"Bosnia and Herzegovina", 25, 0},
	{"Botswana", 26, 0},
	{"Brazil", 27, 29},
	{"British Virgin Islands", 28, 0},
	{"Brunei", 29, 0},
	{"Bulgaria", 30, 0},
	{"Burkina Faso", 31, 0},
	{"Burundi", 32, 0},
	{"Cambodia", 33, 0},
	{"Cameroon", 34, 0},
	{"Canada", 35, 35},
	{"Cape Verde", 36, 0},
	{"Cayman Islands", 37, 0},
	{"Central African Republic", 38, 0},
	{"Chad", 39, 0},
	{"Chile", 40, 37},
	{"China", 41, 38},
	{"Colombia", 42, 0},
	{"Comoros", 43, 0},
	{"Cook Islands", 44, 0},
	{"Costa Rica", 45, 0},
	{"Cote D'Ivoire", 46, 39},
	{"Croatia", 47, 0},
	{"Cuba", 48, 0},
	{"Cyprus", 49, 0},
	{"Czech Republic", 50, 0},
	{"Democratic Republic of the Congo", 51, 0},
	{"Denmark", 52, 0},
	{"Djibouti", 53, 0},
	{"Dominica", 54, 0},
	{"Dominican Republic", 55, 0},
	{"Ecuador", 56, 0},
	{"Egypt", 57, 59},
	{"El Salvador", 58, 0},
	{"Equatorial Guinea", 59, 0},
	{"Eritrea", 60, 0},
	{"Estonia", 61, 0},
	{"Ethiopia", 62, 63},
	{"Faeroe Islands", 63, 0},
	{"Falkland Islands", 64, 0},
	{"Fiji", 65, 0},
	{"Finland", 66, 64},
	{"France", 67, 67},
	{"French Guiana", 68, 0},
	{"French Polynesia", 69, 0},
	{"Gabon", 70, 0},
	{"Gambia", 71, 0},
	{"Georgia", 72, 0},
	{"Germany", 73, 0},
	{"Ghana", 74, 0},
	{"Gibraltar", 75, 0},
	{"Greece", 76, 81},
	{"Greenland", 77, 83},
	{"Grenada", 78, 0},
	{"Guadeloupe", 79, 0},
	{"Guam", 80, 0},
	{"Guatemala", 81, 84},
	{"Guernsey", 82, 0},
	{"Guinea", 83, 0},
	{"Guinea-Bissau", 84, 0},
	{"Guyana", 85, 85},
	{"Haiti", 86, 91},
	{"Honduras", 87, 0},
	{"Hong Kong", 88, 0},
	{"Hungary", 89, 0},
	{"Iceland", 90, 99},
	{"India", 91, 95},
	{"Indonesia", 92, 93},
	{"Iran", 93, 97},
	{"Iraq", 94, 98},
	{"Ireland", 95, 0},
	{"Isle of Man", 96, 0},
	{"Israel", 97, 0},
	{"Italy", 98, 101},
	{"Jamaica", 99, 0},
	{"Japan", 100, 105},
	{"Jersey", 101, 0},
	{"Jordan", 102, 0},
	{"Kazakhstan", 103, 106},
	{"Kenya", 104, 107},
	{"Kiribati", 105, 0},
	{"Kuwait", 106, 0},
	{"Kyrgyzstan", 107, 0},
	{"Laos", 108, 0},
	{"Latvia", 109, 0},
	{"Lebanon", 110, 0},
	{"Lesotho", 111, 0},
	{"Liberia", 112, 0},
	{"Libya", 113, 117},
	{"Liechtenstein", 114, 0},
	{"Lithuania", 115, 0},
	{"Luxembourg", 116, 0},
	{"Macau", 117, 0},
	{"Macedonia", 118, 0},
	{"Madagascar", 119, 129},
	{"Malawi", 120, 0},
	{"Malaysia", 121, 0},
	{"Maldives", 122, 0},
	{"Mali", 123, 134},
	{"Malta", 124, 0},
	{"Marshall Islands", 125, 0},
	{"Martinique", 126, 0},
	{"Mauritania", 127, 0},
	{"Mauritius", 128, 0},
	{"Mayotte", 129, 0},
	{"Mexico", 130, 131},
	{"Micronesia", 131, 0},
	{"Moldova", 132, 0},
	{"Monaco", 133, 0},
	{"Mongolia", 134, 137},
	{"Montserrat", 135, 0},
	{"Morocco", 136, 126},
	{"Mozambique", 137, 139},
	{"Myanmar", 138, 136},
	{"Namibia", 139, 147},
	{"Nauru", 140, 0},
	{"Nepal", 141, 0},
	{"Netherlands", 142, 0},
	{"Netherlands Antilles", 143, 0},
	{"New Caledonia", 144, 0},
	{"New Zealand", 145, 158},
	{"Nicaragua", 146, 0},
	{"Niger", 147, 149},
	{"Nigeria", 148, 151},
	{"North Korea", 149, 0},
	{"Northern Mariana Islands", 150, 0},
	{"Norway", 151, 155},
	{"Oman", 152, 0},
	{"Pakistan", 153, 160},
	{"Palau", 154, 0},
	{"Palestine", 155, 0},
	{"Panama", 156, 0},
	{"Papua New Guinea", 157, 166},
	{"Paraguay", 158, 0},
	{"Peru", 159, 163},
	{"Philippines", 160, 0},
	{"Pitcairn Islands", 161, 0},
	{"Poland", 162, 167},
	{"Portugal", 163, 170},
	{"Puerto Rico", 164, 0},
	{"Qatar", 165, 0},
	{"Republic of the Congo", 166, 0},
	{"Reunion", 167, 0},
	{"Romania", 168, 0},
	{"Russia", 169, 177},
	{"Rwanda", 170, 0},
	{"Saint Helena", 171, 0},
	{"Saint Kitts and Nevis", 172, 0},
	{"Saint Lucia", 173, 0},
	{"Saint Pierre and Miquelon", 174, 0},
	{"Saint Vincent and The Grenadines", 175, 0},
	{"Samoa", 176, 0},
	{"San Marino", 177, 0},
	{"Sao Tome and Principe", 178, 0},
	{"Saudi Arabia", 179, 179},
	{"Senegal", 180, 0},
	{"Serbia and Montenegro", 181, 0},
	{"Seychelles", 182, 0},
	{"Sierra Leone", 183, 0},
	{"Singapore", 184, 0},
	{"Slovakia", 185, 0},
	{"Slovenia", 186, 0},
	{"Solomon Islands", 187, 0},
	{"Somalia", 188, 190},
	{"South Africa", 189, 0},
	{"South Korea", 190, 0},
	{"Spain", 191, 61},
	{"Sri Lanka", 192, 0},
	{"Sudan", 193, 181},
	{"Suriname", 194, 0},
	{"Svalbard", 195, 0},
	{"Swaziland", 196, 0},
	{"Sweden", 197, 196},
	{"Switzerland", 198, 0},
	{"Syria", 199, 0},
	{"Taiwan", 200, 0},
	{"Tajikistan", 201, 0},
	{"Tanzania", 202, 201},
	{"Timor", 203, 0},
	{"Togo", 204, 0},
	{"Tokelau", 205, 0},
	{"Tonga", 206, 0},
	{"Trinidad and Tobago", 207, 0},
	{"Tunisia", 208, 0},
	{"Turkey", 209, 0},
	{"Turkmenistan", 210, 0},
	{"Turks and Caicos Islands", 211, 0},
	{"Tuvalu", 212, 0},
	{"Uganda", 213, 0},
	{"Ukraine", 214, 0},
	{"United Arab Emirates", 215, 0},
	{"United Kingdom", 216, 71},
	{"United States", 217, 218},
	{"Uruguay", 218, 0},
	{"US Virgin Islands", 219, 0},
	{"Uzbekistan", 220, 0},
	{"Vatican City", 221, 0},
	{"Vanuatu", 222, 0},
	{"Venezuela", 223, 222},
	{"Vietnam", 224, 225},
	{"Wallis and Futuna Islands", 225, 226},
	{"Yemen", 226, 229},
	{"Yugoslavia", 227, 0},
	{"Zambia", 228, 0},
	{"Zimbabwe", 229, 230},
	{"Zombieland", 230, 0},
}

// GetCountryCode parse CountryCodeGrumps and get the id
//
// of the country
//
// if it did not find it, it returns -1
func GetCountryCode(fullname string) (codeGrump int) {
	codeGrump = -1

	for _, countryCodeGrump := range CountryCodeGrumps {
		if countryCodeGrump.Name == fullname {
			codeGrump = countryCodeGrump.CodeGrump
		}
	}
	return
}
